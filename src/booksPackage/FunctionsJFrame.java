package booksPackage;

import java.awt.Color;
import java.io.*;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

// NAME: EYLUL APPAK
// STUDENT ID: 19070006015

public class FunctionsJFrame extends javax.swing.JFrame {

    /**
     * Creates new form FunctionsJFrame
     */
    public FunctionsJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuPanel = new javax.swing.JPanel();
        eLibraryLabel = new javax.swing.JLabel();
        homeTab = new javax.swing.JPanel();
        homeLabel = new javax.swing.JLabel();
        addTab = new javax.swing.JPanel();
        addBookLabel = new javax.swing.JLabel();
        deleteTab = new javax.swing.JPanel();
        deleteBookLabel = new javax.swing.JLabel();
        displayInfoTab = new javax.swing.JPanel();
        displayInfoLabel = new javax.swing.JLabel();
        displayImageTab = new javax.swing.JPanel();
        displayImageLabel = new javax.swing.JLabel();
        searchByAuthorTab = new javax.swing.JPanel();
        SearchByAuthorLabel = new javax.swing.JLabel();
        searchByCategoryTab = new javax.swing.JPanel();
        searchByCategoryLabel = new javax.swing.JLabel();
        numOfBooksTab = new javax.swing.JPanel();
        numOfBooksLabel = new javax.swing.JLabel();
        functionsPanel = new javax.swing.JPanel();
        homePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        iconLabel = new javax.swing.JLabel();
        addBookPanel = new javax.swing.JPanel();
        directiveLabel1 = new javax.swing.JLabel();
        titleLabel = new javax.swing.JLabel();
        titleTextField = new javax.swing.JTextField();
        categoryLabel = new javax.swing.JLabel();
        authorLabel = new javax.swing.JLabel();
        awardLabel = new javax.swing.JLabel();
        ratingLabel = new javax.swing.JLabel();
        pagesLabel = new javax.swing.JLabel();
        yearLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        categoryTextField = new javax.swing.JTextField();
        authorTextField = new javax.swing.JTextField();
        awardTextField = new javax.swing.JTextField();
        ratingComboBox = new javax.swing.JComboBox<>();
        yearTextField = new javax.swing.JTextField();
        pagesTextField = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        resultLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        clearButton = new javax.swing.JButton();
        deleteBookPanel = new javax.swing.JPanel();
        directiveLabel2 = new javax.swing.JLabel();
        deleteTextField = new javax.swing.JTextField();
        deleteButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        displayInfoPanel = new javax.swing.JPanel();
        directiveLabel3 = new javax.swing.JLabel();
        keywordTextField = new javax.swing.JTextField();
        displayInfoButton = new javax.swing.JButton();
        warningLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        infoTextArea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        displayImagePanel = new javax.swing.JPanel();
        directiveLabel4 = new javax.swing.JLabel();
        bookIdTextField = new javax.swing.JTextField();
        imageLabel = new javax.swing.JLabel();
        displayImgButton = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        searchByAuthorPanel = new javax.swing.JPanel();
        directiveLabel5 = new javax.swing.JLabel();
        authorNameTextField = new javax.swing.JTextField();
        searchByAuthorButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        booksTextArea = new javax.swing.JTextArea();
        warningLabel2 = new javax.swing.JLabel();
        directiveLabel6 = new javax.swing.JLabel();
        searchByCategoryPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        categorySearchTextField = new javax.swing.JTextField();
        searchByCategoryButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        searchResultTextArea = new javax.swing.JTextArea();
        warningLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        sortCheckBox = new javax.swing.JCheckBox();
        numOfBooksPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        yearTextField2 = new javax.swing.JTextField();
        displayNumOfBooksButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        numOfBooksLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1138, 620));
        setMinimumSize(new java.awt.Dimension(1138, 620));
        setPreferredSize(new java.awt.Dimension(1138, 620));
        setResizable(false);
        setSize(new java.awt.Dimension(1138, 620));

        menuPanel.setBackground(new java.awt.Color(0, 102, 204));

        eLibraryLabel.setFont(new java.awt.Font("Century Gothic", 0, 36)); // NOI18N
        eLibraryLabel.setForeground(new java.awt.Color(255, 255, 255));
        eLibraryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        eLibraryLabel.setText("eLibrary");
        eLibraryLabel.setBorder(null);

        homeTab.setBackground(new java.awt.Color(255, 255, 255));
        homeTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeTabMouseClicked(evt);
            }
        });

        homeLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        homeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        homeLabel.setText("Home");

        javax.swing.GroupLayout homeTabLayout = new javax.swing.GroupLayout(homeTab);
        homeTab.setLayout(homeTabLayout);
        homeTabLayout.setHorizontalGroup(
            homeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homeLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        homeTabLayout.setVerticalGroup(
            homeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homeLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addTab.setBackground(new java.awt.Color(204, 204, 255));
        addTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTabMouseClicked(evt);
            }
        });

        addBookLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        addBookLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addBookLabel.setText("Add a book");

        javax.swing.GroupLayout addTabLayout = new javax.swing.GroupLayout(addTab);
        addTab.setLayout(addTabLayout);
        addTabLayout.setHorizontalGroup(
            addTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addBookLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        addTabLayout.setVerticalGroup(
            addTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addBookLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        deleteTab.setBackground(new java.awt.Color(204, 204, 255));
        deleteTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteTabMouseClicked(evt);
            }
        });

        deleteBookLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        deleteBookLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deleteBookLabel.setText("Delete a book");

        javax.swing.GroupLayout deleteTabLayout = new javax.swing.GroupLayout(deleteTab);
        deleteTab.setLayout(deleteTabLayout);
        deleteTabLayout.setHorizontalGroup(
            deleteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteBookLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        deleteTabLayout.setVerticalGroup(
            deleteTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(deleteBookLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        displayInfoTab.setBackground(new java.awt.Color(204, 204, 255));
        displayInfoTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayInfoTabMouseClicked(evt);
            }
        });

        displayInfoLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        displayInfoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        displayInfoLabel.setText("Display information of a book");

        javax.swing.GroupLayout displayInfoTabLayout = new javax.swing.GroupLayout(displayInfoTab);
        displayInfoTab.setLayout(displayInfoTabLayout);
        displayInfoTabLayout.setHorizontalGroup(
            displayInfoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayInfoTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayInfoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        displayInfoTabLayout.setVerticalGroup(
            displayInfoTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayInfoTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayInfoLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        displayImageTab.setBackground(new java.awt.Color(204, 204, 255));
        displayImageTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                displayImageTabMouseClicked(evt);
            }
        });

        displayImageLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        displayImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        displayImageLabel.setText("Display the image of a book cover");

        javax.swing.GroupLayout displayImageTabLayout = new javax.swing.GroupLayout(displayImageTab);
        displayImageTab.setLayout(displayImageTabLayout);
        displayImageTabLayout.setHorizontalGroup(
            displayImageTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayImageTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addContainerGap())
        );
        displayImageTabLayout.setVerticalGroup(
            displayImageTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayImageTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(displayImageLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        searchByAuthorTab.setBackground(new java.awt.Color(204, 204, 255));
        searchByAuthorTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchByAuthorTabMouseClicked(evt);
            }
        });

        SearchByAuthorLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        SearchByAuthorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SearchByAuthorLabel.setText("Search books by author");

        javax.swing.GroupLayout searchByAuthorTabLayout = new javax.swing.GroupLayout(searchByAuthorTab);
        searchByAuthorTab.setLayout(searchByAuthorTabLayout);
        searchByAuthorTabLayout.setHorizontalGroup(
            searchByAuthorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchByAuthorTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SearchByAuthorLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        searchByAuthorTabLayout.setVerticalGroup(
            searchByAuthorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchByAuthorTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SearchByAuthorLabel)
                .addContainerGap())
        );

        searchByCategoryTab.setBackground(new java.awt.Color(204, 204, 255));
        searchByCategoryTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchByCategoryTabMouseClicked(evt);
            }
        });

        searchByCategoryLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        searchByCategoryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        searchByCategoryLabel.setText("Search books by category");

        javax.swing.GroupLayout searchByCategoryTabLayout = new javax.swing.GroupLayout(searchByCategoryTab);
        searchByCategoryTab.setLayout(searchByCategoryTabLayout);
        searchByCategoryTabLayout.setHorizontalGroup(
            searchByCategoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchByCategoryTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchByCategoryLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        searchByCategoryTabLayout.setVerticalGroup(
            searchByCategoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchByCategoryTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchByCategoryLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        numOfBooksTab.setBackground(new java.awt.Color(204, 204, 255));
        numOfBooksTab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                numOfBooksTabMouseClicked(evt);
            }
        });

        numOfBooksLabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        numOfBooksLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        numOfBooksLabel.setText("Number of books finished in a year");

        javax.swing.GroupLayout numOfBooksTabLayout = new javax.swing.GroupLayout(numOfBooksTab);
        numOfBooksTab.setLayout(numOfBooksTabLayout);
        numOfBooksTabLayout.setHorizontalGroup(
            numOfBooksTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(numOfBooksTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(numOfBooksLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        numOfBooksTabLayout.setVerticalGroup(
            numOfBooksTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, numOfBooksTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(numOfBooksLabel)
                .addContainerGap())
        );

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(eLibraryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(displayImageTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchByAuthorTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(displayInfoTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(numOfBooksTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(homeTab, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchByCategoryTab, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(eLibraryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addComponent(homeTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayInfoTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(displayImageTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchByAuthorTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchByCategoryTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(numOfBooksTab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        functionsPanel.setBackground(new java.awt.Color(255, 255, 255));
        functionsPanel.setToolTipText("");
        functionsPanel.setRequestFocusEnabled(false);

        homePanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel1.setText("Welcome to eLibrary!");

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setText(" You can select the operation you want to perform from the listed options on the left.");

        iconLabel.setIcon(new ImageIcon("home_icon.png"));

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jLabel1))
                    .addGroup(homePanelLayout.createSequentialGroup()
                        .addGap(141, 141, 141)
                        .addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(503, Short.MAX_VALUE))
        );
        homePanelLayout.setVerticalGroup(
            homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanelLayout.createSequentialGroup()
                .addGap(127, 127, 127)
                .addComponent(iconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addContainerGap(221, Short.MAX_VALUE))
        );

        addBookPanel.setBackground(new java.awt.Color(255, 255, 255));

        directiveLabel1.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        directiveLabel1.setText("Enter the information of the book that you want to add.");

        titleLabel.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        titleLabel.setText("Title:");

        categoryLabel.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        categoryLabel.setText("Category:");

        authorLabel.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        authorLabel.setText("Author Name and Surname:");

        awardLabel.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        awardLabel.setText("Award:");

        ratingLabel.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        ratingLabel.setText("Rating:");

        pagesLabel.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        pagesLabel.setText("Number of Pages:");

        yearLabel.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        yearLabel.setText("Year:");

        descriptionLabel.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        descriptionLabel.setText("Short Description:");

        ratingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        addButton.setBackground(new java.awt.Color(0, 102, 204));
        addButton.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Add Book");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        resultLabel1.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        resultLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(descriptionTextArea);

        clearButton.setBackground(new java.awt.Color(0, 153, 51));
        clearButton.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        clearButton.setForeground(new java.awt.Color(255, 255, 255));
        clearButton.setText("Clear");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        addBookPanel.setVisible(false);

        javax.swing.GroupLayout addBookPanelLayout = new javax.swing.GroupLayout(addBookPanel);
        addBookPanel.setLayout(addBookPanelLayout);
        addBookPanelLayout.setHorizontalGroup(
            addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addBookPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionLabel)
                    .addGroup(addBookPanelLayout.createSequentialGroup()
                        .addComponent(awardLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(awardTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addBookPanelLayout.createSequentialGroup()
                        .addComponent(authorLabel)
                        .addGap(18, 18, 18)
                        .addComponent(authorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addBookPanelLayout.createSequentialGroup()
                        .addComponent(categoryLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(categoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(addBookPanelLayout.createSequentialGroup()
                            .addComponent(titleLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(titleTextField))
                        .addComponent(directiveLabel1))
                    .addGroup(addBookPanelLayout.createSequentialGroup()
                        .addGroup(addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addBookPanelLayout.createSequentialGroup()
                                .addComponent(yearLabel)
                                .addGap(18, 18, 18)
                                .addComponent(yearTextField))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, addBookPanelLayout.createSequentialGroup()
                                    .addComponent(ratingLabel)
                                    .addGap(18, 18, 18)
                                    .addComponent(ratingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(pagesLabel)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pagesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addBookPanelLayout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resultLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(462, Short.MAX_VALUE))
        );
        addBookPanelLayout.setVerticalGroup(
            addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addBookPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(directiveLabel1)
                .addGap(29, 29, 29)
                .addGroup(addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLabel)
                    .addComponent(titleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLabel)
                    .addComponent(categoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(authorLabel)
                    .addComponent(authorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(awardLabel)
                    .addComponent(awardTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ratingLabel)
                    .addComponent(ratingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearLabel)
                    .addComponent(yearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pagesLabel)
                    .addComponent(pagesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(descriptionLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(resultLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(66, Short.MAX_VALUE))
        );

        deleteBookPanel.setBackground(new java.awt.Color(255, 255, 255));

        directiveLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        directiveLabel2.setText("Enter the id of the book that you want to delete.");

        deleteTextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        deleteButton.setBackground(new java.awt.Color(0, 102, 204));
        deleteButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Book id");

        deleteBookPanel.setVisible(false);

        javax.swing.GroupLayout deleteBookPanelLayout = new javax.swing.GroupLayout(deleteBookPanel);
        deleteBookPanel.setLayout(deleteBookPanelLayout);
        deleteBookPanelLayout.setHorizontalGroup(
            deleteBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteBookPanelLayout.createSequentialGroup()
                .addGap(221, 221, 221)
                .addGroup(deleteBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deleteBookPanelLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addGroup(deleteBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)))
                    .addComponent(directiveLabel2))
                .addContainerGap(646, Short.MAX_VALUE))
        );
        deleteBookPanelLayout.setVerticalGroup(
            deleteBookPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deleteBookPanelLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(directiveLabel2)
                .addGap(37, 37, 37)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90)
                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(195, Short.MAX_VALUE))
        );

        displayInfoPanel.setBackground(new java.awt.Color(255, 255, 255));

        directiveLabel3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        directiveLabel3.setText("Enter the title or a keyword from the title of the book which you want to display the information of.");

        keywordTextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        displayInfoButton.setBackground(new java.awt.Color(0, 102, 204));
        displayInfoButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        displayInfoButton.setForeground(new java.awt.Color(255, 255, 255));
        displayInfoButton.setText("Display");
        displayInfoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayInfoButtonActionPerformed(evt);
            }
        });

        warningLabel.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        infoTextArea.setEditable(false);
        infoTextArea.setColumns(20);
        infoTextArea.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        infoTextArea.setRows(5);
        jScrollPane3.setViewportView(infoTextArea);

        jLabel8.setText("Title/keyword");

        displayInfoPanel.setVisible(false);

        javax.swing.GroupLayout displayInfoPanelLayout = new javax.swing.GroupLayout(displayInfoPanel);
        displayInfoPanel.setLayout(displayInfoPanelLayout);
        displayInfoPanelLayout.setHorizontalGroup(
            displayInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayInfoPanelLayout.createSequentialGroup()
                .addGap(112, 112, 112)
                .addGroup(displayInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(displayInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane3)
                        .addComponent(directiveLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(displayInfoPanelLayout.createSequentialGroup()
                        .addComponent(displayInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(keywordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(371, Short.MAX_VALUE))
        );
        displayInfoPanelLayout.setVerticalGroup(
            displayInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayInfoPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(directiveLabel3)
                .addGap(28, 28, 28)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(keywordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(displayInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayInfoPanelLayout.createSequentialGroup()
                        .addComponent(displayInfoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(warningLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        displayImagePanel.setBackground(new java.awt.Color(255, 255, 255));

        directiveLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        directiveLabel4.setText("Enter the id of the book that you want to display the cover of.");

        bookIdTextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        displayImgButton.setBackground(new java.awt.Color(0, 102, 204));
        displayImgButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        displayImgButton.setForeground(new java.awt.Color(255, 255, 255));
        displayImgButton.setText("Display");
        displayImgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayImgButtonActionPerformed(evt);
            }
        });

        jLabel9.setText("Book id");

        displayImagePanel.setVisible(false);

        javax.swing.GroupLayout displayImagePanelLayout = new javax.swing.GroupLayout(displayImagePanel);
        displayImagePanel.setLayout(displayImagePanelLayout);
        displayImagePanelLayout.setHorizontalGroup(
            displayImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayImagePanelLayout.createSequentialGroup()
                .addGroup(displayImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayImagePanelLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(directiveLabel4))
                    .addGroup(displayImagePanelLayout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(displayImagePanelLayout.createSequentialGroup()
                        .addGap(289, 289, 289)
                        .addGroup(displayImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(displayImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(displayImgButton, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                .addComponent(bookIdTextField)))))
                .addContainerGap(638, Short.MAX_VALUE))
        );
        displayImagePanelLayout.setVerticalGroup(
            displayImagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, displayImagePanelLayout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addComponent(directiveLabel4)
                .addGap(22, 22, 22)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bookIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(displayImgButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(imageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
        );

        searchByAuthorPanel.setBackground(new java.awt.Color(255, 255, 255));

        directiveLabel5.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        directiveLabel5.setText("Author Name and Surname");

        authorNameTextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        searchByAuthorButton.setBackground(new java.awt.Color(0, 102, 204));
        searchByAuthorButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        searchByAuthorButton.setForeground(new java.awt.Color(255, 255, 255));
        searchByAuthorButton.setText("Search");
        searchByAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByAuthorButtonActionPerformed(evt);
            }
        });

        booksTextArea.setEditable(false);
        booksTextArea.setColumns(20);
        booksTextArea.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        booksTextArea.setRows(5);
        jScrollPane2.setViewportView(booksTextArea);

        warningLabel2.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        directiveLabel6.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        directiveLabel6.setText("Books of the author:");

        searchByAuthorPanel.setVisible(false);

        javax.swing.GroupLayout searchByAuthorPanelLayout = new javax.swing.GroupLayout(searchByAuthorPanel);
        searchByAuthorPanel.setLayout(searchByAuthorPanelLayout);
        searchByAuthorPanelLayout.setHorizontalGroup(
            searchByAuthorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchByAuthorPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(searchByAuthorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchByAuthorPanelLayout.createSequentialGroup()
                        .addComponent(searchByAuthorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(warningLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searchByAuthorPanelLayout.createSequentialGroup()
                        .addGroup(searchByAuthorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(directiveLabel5)
                            .addComponent(authorNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(directiveLabel6)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(390, 390, 390))
        );
        searchByAuthorPanelLayout.setVerticalGroup(
            searchByAuthorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchByAuthorPanelLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(directiveLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(authorNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(searchByAuthorPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(warningLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchByAuthorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(directiveLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        searchByCategoryPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel3.setText("Category");

        categorySearchTextField.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        searchByCategoryButton.setBackground(new java.awt.Color(0, 102, 204));
        searchByCategoryButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        searchByCategoryButton.setForeground(new java.awt.Color(255, 255, 255));
        searchByCategoryButton.setText("Search");
        searchByCategoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchByCategoryButtonActionPerformed(evt);
            }
        });

        searchResultTextArea.setEditable(false);
        searchResultTextArea.setColumns(20);
        searchResultTextArea.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        searchResultTextArea.setRows(5);
        jScrollPane4.setViewportView(searchResultTextArea);

        warningLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setText("Books within the entered category:");

        sortCheckBox.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        sortCheckBox.setText("Sort by Rating");

        searchByCategoryPanel.setVisible(false);

        javax.swing.GroupLayout searchByCategoryPanelLayout = new javax.swing.GroupLayout(searchByCategoryPanel);
        searchByCategoryPanel.setLayout(searchByCategoryPanelLayout);
        searchByCategoryPanelLayout.setHorizontalGroup(
            searchByCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchByCategoryPanelLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(searchByCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addGroup(searchByCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3)
                        .addGroup(searchByCategoryPanelLayout.createSequentialGroup()
                            .addComponent(categorySearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(67, 67, 67)
                            .addComponent(sortCheckBox))
                        .addGroup(searchByCategoryPanelLayout.createSequentialGroup()
                            .addComponent(searchByCategoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(warningLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(519, Short.MAX_VALUE))
        );
        searchByCategoryPanelLayout.setVerticalGroup(
            searchByCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchByCategoryPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchByCategoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchByCategoryPanelLayout.createSequentialGroup()
                        .addComponent(categorySearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchByCategoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(searchByCategoryPanelLayout.createSequentialGroup()
                        .addComponent(sortCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(warningLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(7, 7, 7)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(73, Short.MAX_VALUE))
        );

        numOfBooksPanel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel5.setText("Year");

        yearTextField2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N

        displayNumOfBooksButton.setBackground(new java.awt.Color(0, 102, 204));
        displayNumOfBooksButton.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        displayNumOfBooksButton.setForeground(new java.awt.Color(255, 255, 255));
        displayNumOfBooksButton.setText("Display");
        displayNumOfBooksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayNumOfBooksButtonActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel7.setText("Enter a year to see the number of books that you have finished reading in that year.");

        numOfBooksLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        numOfBooksLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        numOfBooksPanel.setVisible(false);

        javax.swing.GroupLayout numOfBooksPanelLayout = new javax.swing.GroupLayout(numOfBooksPanel);
        numOfBooksPanel.setLayout(numOfBooksPanelLayout);
        numOfBooksPanelLayout.setHorizontalGroup(
            numOfBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(numOfBooksPanelLayout.createSequentialGroup()
                .addGroup(numOfBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(numOfBooksPanelLayout.createSequentialGroup()
                        .addGap(284, 284, 284)
                        .addGroup(numOfBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(yearTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(numOfBooksPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(numOfBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(numOfBooksLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(numOfBooksPanelLayout.createSequentialGroup()
                        .addGap(272, 272, 272)
                        .addComponent(displayNumOfBooksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(568, Short.MAX_VALUE))
        );
        numOfBooksPanelLayout.setVerticalGroup(
            numOfBooksPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(numOfBooksPanelLayout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addComponent(jLabel7)
                .addGap(52, 52, 52)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yearTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(displayNumOfBooksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(numOfBooksLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(186, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout functionsPanelLayout = new javax.swing.GroupLayout(functionsPanel);
        functionsPanel.setLayout(functionsPanelLayout);
        functionsPanelLayout.setHorizontalGroup(
            functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addBookPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(functionsPanelLayout.createSequentialGroup()
                    .addComponent(deleteBookPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 11, Short.MAX_VALUE)))
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(functionsPanelLayout.createSequentialGroup()
                    .addComponent(displayImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(displayInfoPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(functionsPanelLayout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addComponent(searchByAuthorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(3, 3, 3)))
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(functionsPanelLayout.createSequentialGroup()
                    .addGap(3, 3, 3)
                    .addComponent(numOfBooksPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(3, 3, 3)))
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(functionsPanelLayout.createSequentialGroup()
                    .addComponent(homePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(searchByCategoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        functionsPanelLayout.setVerticalGroup(
            functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addBookPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(functionsPanelLayout.createSequentialGroup()
                    .addComponent(deleteBookPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 12, Short.MAX_VALUE)))
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(displayImagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(functionsPanelLayout.createSequentialGroup()
                    .addComponent(displayInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 12, Short.MAX_VALUE)))
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(functionsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(searchByAuthorPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(numOfBooksPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(functionsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(homePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(functionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(searchByCategoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(functionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(functionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTabMouseClicked
        deleteBookPanel.setVisible(false);
        displayImagePanel.setVisible(false);
        displayInfoPanel.setVisible(false);
        searchByAuthorPanel.setVisible(false);
        numOfBooksPanel.setVisible(false);
        searchByCategoryPanel.setVisible(false);
        homePanel.setVisible(false);
        addBookPanel.setVisible(true);
        
        deleteTab.setBackground(new Color(204,204,255));
        displayInfoTab.setBackground(new Color(204,204,255));
        displayImageTab.setBackground(new Color(204,204,255));
        searchByAuthorTab.setBackground(new Color(204,204,255));
        numOfBooksTab.setBackground(new Color(204,204,255));
        homeTab.setBackground(new Color(204,204,255));
        searchByCategoryTab.setBackground(new Color(204,204,255));
        addTab.setBackground(Color.white);
    }//GEN-LAST:event_addTabMouseClicked

    private void deleteTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteTabMouseClicked
        addBookPanel.setVisible(false);
        displayImagePanel.setVisible(false);
        displayInfoPanel.setVisible(false);
        searchByAuthorPanel.setVisible(false);
        numOfBooksPanel.setVisible(false);
        searchByCategoryPanel.setVisible(false);
        homePanel.setVisible(false);
        deleteBookPanel.setVisible(true);
        
        addTab.setBackground(new Color(204,204,255));
        displayInfoTab.setBackground(new Color(204,204,255));
        displayImageTab.setBackground(new Color(204,204,255));
        searchByAuthorTab.setBackground(new Color(204,204,255));
        numOfBooksTab.setBackground(new Color(204,204,255));
        homeTab.setBackground(new Color(204,204,255));
        searchByCategoryTab.setBackground(new Color(204,204,255));
        deleteTab.setBackground(Color.white);
    }//GEN-LAST:event_deleteTabMouseClicked

    private void displayInfoTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayInfoTabMouseClicked
        deleteBookPanel.setVisible(false);
        displayImagePanel.setVisible(false);
        addBookPanel.setVisible(false);
        searchByAuthorPanel.setVisible(false);
        numOfBooksPanel.setVisible(false);
        searchByCategoryPanel.setVisible(false);
        homePanel.setVisible(false);
        displayInfoPanel.setVisible(true);
        
        deleteTab.setBackground(new Color(204,204,255));
        addTab.setBackground(new Color(204,204,255));
        displayImageTab.setBackground(new Color(204,204,255));
        searchByAuthorTab.setBackground(new Color(204,204,255));
        numOfBooksTab.setBackground(new Color(204,204,255));
        homeTab.setBackground(new Color(204,204,255));
        searchByCategoryTab.setBackground(new Color(204,204,255));
        displayInfoTab.setBackground(Color.white);
    }//GEN-LAST:event_displayInfoTabMouseClicked

    private void displayImageTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_displayImageTabMouseClicked
        deleteBookPanel.setVisible(false);
        addBookPanel.setVisible(false);
        displayInfoPanel.setVisible(false);
        searchByAuthorPanel.setVisible(false);
        numOfBooksPanel.setVisible(false);
        searchByCategoryPanel.setVisible(false);
        homePanel.setVisible(false);
        displayImagePanel.setVisible(true);
        
        deleteTab.setBackground(new Color(204,204,255));
        displayInfoTab.setBackground(new Color(204,204,255));
        addTab.setBackground(new Color(204,204,255));
        searchByAuthorTab.setBackground(new Color(204,204,255));
        numOfBooksTab.setBackground(new Color(204,204,255));
        homeTab.setBackground(new Color(204,204,255));
        searchByCategoryTab.setBackground(new Color(204,204,255));
        displayImageTab.setBackground(Color.white);
    }//GEN-LAST:event_displayImageTabMouseClicked

    private void searchByAuthorTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchByAuthorTabMouseClicked
        deleteBookPanel.setVisible(false);
        displayImagePanel.setVisible(false);
        displayInfoPanel.setVisible(false);
        addBookPanel.setVisible(false);
        numOfBooksPanel.setVisible(false);
        searchByCategoryPanel.setVisible(false);
        homePanel.setVisible(false);
        searchByAuthorPanel.setVisible(true);
        
        deleteTab.setBackground(new Color(204,204,255));
        displayInfoTab.setBackground(new Color(204,204,255));
        displayImageTab.setBackground(new Color(204,204,255));
        addTab.setBackground(new Color(204,204,255));
        numOfBooksTab.setBackground(new Color(204,204,255));
        homeTab.setBackground(new Color(204,204,255));
        searchByCategoryTab.setBackground(new Color(204,204,255));
        searchByAuthorTab.setBackground(Color.white);
    }//GEN-LAST:event_searchByAuthorTabMouseClicked

    private void numOfBooksTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_numOfBooksTabMouseClicked
        deleteBookPanel.setVisible(false);
        displayImagePanel.setVisible(false);
        displayInfoPanel.setVisible(false);
        searchByAuthorPanel.setVisible(false);
        addBookPanel.setVisible(false);
        searchByCategoryPanel.setVisible(false);
        homePanel.setVisible(false);
        numOfBooksPanel.setVisible(true);
        
        deleteTab.setBackground(new Color(204,204,255));
        displayInfoTab.setBackground(new Color(204,204,255));
        displayImageTab.setBackground(new Color(204,204,255));
        searchByAuthorTab.setBackground(new Color(204,204,255));
        addTab.setBackground(new Color(204,204,255));
        homeTab.setBackground(new Color(204,204,255));
        searchByCategoryTab.setBackground(new Color(204,204,255));
        numOfBooksTab.setBackground(Color.white);
    }//GEN-LAST:event_numOfBooksTabMouseClicked

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        String title = titleTextField.getText();
        String category = categoryTextField.getText();
        String authorName = authorTextField.getText();
        String award = awardTextField.getText();
        String rating = String.valueOf(ratingComboBox.getSelectedItem());
        String year = yearTextField.getText();
        String numOfPages = pagesTextField.getText();
        String description = descriptionTextArea.getText();
        
        // checking if all entered data are valid
        Pattern letterPattern = Pattern.compile("^[ A-Za-z.]+$");
        Pattern yearPattern = Pattern.compile("^\\d{4}$");
        Pattern numberPattern = Pattern.compile("[0-9]+");
        if(title.isEmpty() || category.isEmpty() || authorName.isEmpty() || award.isEmpty() || year.isEmpty() 
        || numOfPages.isEmpty() || description.isEmpty()){
            resultLabel1.setText(null);
            JOptionPane.showMessageDialog(null, "Please enter all the required information.", "MISSING INFORMATION", JOptionPane.WARNING_MESSAGE);
        }else if(! letterPattern.matcher(category).matches()){
            resultLabel1.setText(null);
            JOptionPane.showMessageDialog(null, "Category should only consist of letters.", "INVALID CATEGORY", JOptionPane.WARNING_MESSAGE);
        }else if(! letterPattern.matcher(authorName).matches()){
            resultLabel1.setText(null);
            JOptionPane.showMessageDialog(null, "Author name should only consist of letters.", "INVALID AUTHOR NAME", JOptionPane.WARNING_MESSAGE);
        }else if(! letterPattern.matcher(award).matches()){
            resultLabel1.setText(null);
            JOptionPane.showMessageDialog(null, "Award should only consist of letters.", "INVALID AWARD", JOptionPane.WARNING_MESSAGE);
        }else if(! yearPattern.matcher(year).matches()){
            resultLabel1.setText(null);
            JOptionPane.showMessageDialog(null, "Please enter a valid year.", "INVALID YEAR", JOptionPane.WARNING_MESSAGE);
        }else if(! numberPattern.matcher(numOfPages).matches()){
            resultLabel1.setText(null);
            JOptionPane.showMessageDialog(null, "Please enter a valid number of pages.", "INVALID NUMBER OF PAGES", JOptionPane.WARNING_MESSAGE);
        }
        else{ // if all data are valid
            BufferedReader reader;
            Writer output;
            try {
            reader = new BufferedReader(new FileReader("books.txt"));
            String currentLine; 
            String idString = null;
            
            // iterate through each line 
            while ((currentLine = reader.readLine()) != null){
                // split the comma-seperated string but ignore the commas in the short description
                //(short description is given between quotes)
                 String[] data = currentLine.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
                  
                 idString = data[0]; // get the id of the last book in the list
            } 
            
            int lastId = Integer.parseInt(idString);
            reader.close();
            String bookId = String.valueOf(lastId + 1);
            
            // concatenate the data
            String newBook = bookId + "," + title + "," + category + "," + authorName + "," + award 
                           + "," + rating + "," + year + "," + numOfPages + "," + "\"" + description + "\"";
            
            output = new BufferedWriter(new FileWriter("books.txt", true)); 
            output.append("\n" + newBook); // add new book to the file
            output.close();
            
            resultLabel1.setText(title + " is successfully added to your library.");
            
            } catch (FileNotFoundException ex) {
               JOptionPane.showMessageDialog(null, "Exception Thrown: " + ex , "ERROR", JOptionPane.ERROR_MESSAGE);
            } catch (IOException ex) {
               JOptionPane.showMessageDialog(null, "Exception Thrown: " + ex , "ERROR", JOptionPane.ERROR_MESSAGE);
            }       
        }    
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
       
       File inputFile = new File("books.txt");
       File tempFile = new File("myTempFile.txt");
       String bookId = deleteTextField.getText();
       BufferedReader reader;
       BufferedWriter  writer;
       boolean idIsValid = false;
       
       // check if the entered value is numeric
       Pattern numberPattern = Pattern.compile("[0-9]+"); 
       if(! numberPattern.matcher(bookId).matches()){
            JOptionPane.showMessageDialog(null, "Please enter a numeric value.", "INVALID BOOK ID", JOptionPane.WARNING_MESSAGE);
        }else{
           
         try {
            reader = new BufferedReader(new FileReader(inputFile));
            writer = new BufferedWriter(new FileWriter(tempFile));
            StringBuilder sb = new StringBuilder();
            String currentLine;

            // write all lines except the line to be deleted to a new file
            while((currentLine = reader.readLine()) != null) {
                  // split the comma-seperated string but ignore the commas in the short description
                  //(short description is given between quotes)
                  String[] data = currentLine.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
                  
                  if(data[0].equals(bookId)){
                      idIsValid = true;
                      continue;
                  } 
                      
                  sb.append(currentLine + System.getProperty("line.separator"));
            }
            String text = sb.toString();
            // after deletion, there is an empty line left after the last book
            // so, we use trim() to omit the leading and trailing whitespace.
            writer.write(text.trim());
            writer.close(); 
            reader.close(); 
            // delete the original file and rename the new file with the old file's name
            inputFile.delete();
            tempFile.renameTo(inputFile);

            if(idIsValid){
                JOptionPane.showMessageDialog(null, "The book is successfully deleted from your library.", "BOOK DELETED", JOptionPane.PLAIN_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(null, "There is no book with the entered id in your library.", "ERROR", JOptionPane.WARNING_MESSAGE);
            }
            
         } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Exception Thrown: " + ex , "ERROR", JOptionPane.ERROR_MESSAGE);
         } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Exception Thrown: " + ex , "ERROR", JOptionPane.ERROR_MESSAGE);
         }
       
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void displayInfoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayInfoButtonActionPerformed
        String currentLine; 
        String enteredKeyword = keywordTextField.getText();
        infoTextArea.setText(null);
        boolean keywordIsFound = false;
        BufferedReader bf;
        try {
            bf = new BufferedReader(new FileReader("books.txt"));
            
            while ((currentLine = bf.readLine()) != null){
                // split the comma-seperated string but ignore the commas in the short description
                //(short description is given between quotes)
                 String[] data = currentLine.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
                 
                 // remove quotes from short description
                 data[8] = data[8].replaceAll("^\"|\"$", "");
                 // check if title of the current book contains the entered keyword
                 if(data[1].toLowerCase().contains(enteredKeyword.toLowerCase())){
                    String infoString = "Book Id: " + data[0] + "\nTitle: " + data[1] + "\nCategory: " + data[2]
                                       +"\nAuthor: " + data[3] + "\nAward: " + data[4] + "\nRating: " + data[5]
                                       +"\nYear: " + data[6] + "\nNumber of Pages: " + data[7] + "\nShort Description: "
                                       + data[8] + "\n\n";
                    infoTextArea.append(infoString);
                    keywordIsFound = true;
                 }    
            }
            
            if(keywordIsFound){
                 warningLabel.setText(null); 
            }else 
                 warningLabel.setText("There is no book title with the entered keyword. Please try again.");

        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Exception Thrown: " + ex , "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Exception Thrown: " + ex , "ERROR", JOptionPane.ERROR_MESSAGE);
        }
                    
    }//GEN-LAST:event_displayInfoButtonActionPerformed

    private void homeTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeTabMouseClicked
        deleteBookPanel.setVisible(false);
        displayImagePanel.setVisible(false);
        displayInfoPanel.setVisible(false);
        searchByAuthorPanel.setVisible(false);
        numOfBooksPanel.setVisible(false);
        addBookPanel.setVisible(false);
        searchByCategoryPanel.setVisible(false);
        homePanel.setVisible(true);
        
        deleteTab.setBackground(new Color(204,204,255));
        displayInfoTab.setBackground(new Color(204,204,255));
        displayImageTab.setBackground(new Color(204,204,255));
        searchByAuthorTab.setBackground(new Color(204,204,255));
        numOfBooksTab.setBackground(new Color(204,204,255));
        addTab.setBackground(new Color(204,204,255));
        searchByCategoryTab.setBackground(new Color(204,204,255));
        homeTab.setBackground(Color.white);
       
    }//GEN-LAST:event_homeTabMouseClicked

    private void displayImgButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayImgButtonActionPerformed

        String bookId = bookIdTextField.getText();        
        
        // check if the entered value is numeric
        Pattern numberPattern = Pattern.compile("[0-9]+"); 
        if(! numberPattern.matcher(bookId).matches()){
            imageLabel.setIcon(null);
            JOptionPane.showMessageDialog(null, "Please enter a numeric value.", "INVALID BOOK ID", JOptionPane.WARNING_MESSAGE);
        }else{
            
            if(bookId.matches("^[1-5]$")){
               String imagePath = "Book" + bookId + "Cover.jpg";
               ImageIcon bookCover = new ImageIcon(imagePath);
               imageLabel.setIcon(bookCover);
            }else{
                imageLabel.setIcon(null);
                JOptionPane.showMessageDialog(null, "There is no cover image for the entered book id.", "IMAGE NOT FOUND", JOptionPane.WARNING_MESSAGE);
            }        
        }    
    }//GEN-LAST:event_displayImgButtonActionPerformed

    private void searchByCategoryTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchByCategoryTabMouseClicked
        
        deleteBookPanel.setVisible(false);
        displayImagePanel.setVisible(false);
        displayInfoPanel.setVisible(false);
        searchByAuthorPanel.setVisible(false);
        numOfBooksPanel.setVisible(false);
        addBookPanel.setVisible(false);
        homePanel.setVisible(false);
        searchByCategoryPanel.setVisible(true);
        
        deleteTab.setBackground(new Color(204,204,255));
        displayInfoTab.setBackground(new Color(204,204,255));
        displayImageTab.setBackground(new Color(204,204,255));
        searchByAuthorTab.setBackground(new Color(204,204,255));
        numOfBooksTab.setBackground(new Color(204,204,255));
        homeTab.setBackground(new Color(204,204,255));
        addTab.setBackground(new Color(204,204,255));
        searchByCategoryTab.setBackground(Color.white);
    }//GEN-LAST:event_searchByCategoryTabMouseClicked

    private void searchByAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByAuthorButtonActionPerformed
        booksTextArea.setText(null);
        String currentLine; 
        String authorName = authorNameTextField.getText();
        BufferedReader bf;
        boolean authorIsFound = false;
        
        // check if the entered author name contains only letters and spaces
        Pattern letterPattern = Pattern.compile("^[ A-Za-z.]+$");
        if(! letterPattern.matcher(authorName).matches()){
            warningLabel2.setText(null); 
            JOptionPane.showMessageDialog(null, "Author name should only consist of letters.", "INVALID AUTHOR NAME", JOptionPane.WARNING_MESSAGE);
        }else{    
            
          try {
            bf = new BufferedReader(new FileReader("books.txt"));
            
            while ((currentLine = bf.readLine()) != null){
                // split the comma-seperated string but ignore the commas in the short description 
                // (short description is given between quotes)
                 String[] data = currentLine.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
                 
                 // remove quotes from short description
                 data[8] = data[8].replaceAll("^\"|\"$", "");
                 // check if author name of the current book equals the entered name
                 if(data[3].toLowerCase().equals(authorName.toLowerCase())){
                    String infoString = "Title: " + data[1] +
                                        "\nShort Description: " + data[8] + "\n\n";
                    booksTextArea.append(infoString);
                    authorIsFound = true;
                 }    
            }
            if(authorIsFound){
                warningLabel2.setText(null); 
            }else
                warningLabel2.setText("There is no book of the entered author in the library.");
            
          } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Exception Thrown: " + ex , "ERROR", JOptionPane.ERROR_MESSAGE);
          } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Exception Thrown: " + ex , "ERROR", JOptionPane.ERROR_MESSAGE);
          }
        }

    }//GEN-LAST:event_searchByAuthorButtonActionPerformed

    private void searchByCategoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchByCategoryButtonActionPerformed
        searchResultTextArea.setText(null);
        String inputCategory = categorySearchTextField.getText();
        String line;
        boolean categoryIsFound = false;
        ArrayList<Book> bookList = new ArrayList<>();
        BufferedReader bf;
        
        // check if the entered category contains only letters and spaces
        Pattern letterPattern = Pattern.compile("^[ A-Za-z]+$");
        if(! letterPattern.matcher(inputCategory).matches()){
            warningLabel3.setText(null);  
            JOptionPane.showMessageDialog(null, "Category should only consist of letters.", "INVALID CATEGORY", JOptionPane.WARNING_MESSAGE);
        }else{ 
         
          try {
            bf = new BufferedReader(new FileReader("books.txt"));
            while((line = bf.readLine()) != null){
                String[] data = line.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
                
                Book book = new Book(data[0], data[1], data[2], data[3], data[4], data[5], data[6], data[7], data[8]);
                bookList.add(book);
            }
            
            // if checkbox is checked, we sort the books by rating (in decreasing order)
            if(sortCheckBox.isSelected()){
               Collections.sort(bookList, new Comparator<Book>()
               {
                    public int compare(Book b1, Book b2){
                         return (b2.getRating()).compareTo(b1.getRating());
                    }
               });
            }
            
            String infoString;
            for(int i = 0; i < bookList.size(); i++){
                if(bookList.get(i).getCategory().toLowerCase().equals(inputCategory.toLowerCase())){
                    // if checkbox is checked, we display book titles with ratings 
                    if(sortCheckBox.isSelected()){
                         infoString = "Title: " + bookList.get(i).getTitle()
                                      + "\nRating: " + bookList.get(i).getRating() + "\n\n";
                    }else{
                        //if checkbox isn't checked, we only display the book titles
                         infoString = bookList.get(i).getTitle() + "\n";
                    }
                       
                    searchResultTextArea.append(infoString);   
                    categoryIsFound = true;
                }
            }
            if(categoryIsFound){
                warningLabel3.setText(null);  
            }else
               warningLabel3.setText("There is no book within the entered category in the library."); 
         } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Exception Thrown: " + ex , "ERROR", JOptionPane.ERROR_MESSAGE);
         }catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Exception Thrown: " + ex , "ERROR", JOptionPane.ERROR_MESSAGE);
         }
        } 
    }//GEN-LAST:event_searchByCategoryButtonActionPerformed

    private void displayNumOfBooksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayNumOfBooksButtonActionPerformed
        String line; 
        String year = yearTextField2.getText();
        numOfBooksLabel2.setText(null);
        int counter = 0;
        boolean YearIsFound = false;
        BufferedReader bf;
        try {
            bf = new BufferedReader(new FileReader("books.txt"));
            int yearInt = Integer.parseInt(year);
            if (1900 <= yearInt && yearInt <= 2021) {
                while ((line = bf.readLine()) != null){
                
                 String[] data = line.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)", -1);
                 
                 if(data[6].equals(year)){
                    counter++;
                    YearIsFound = true;
                 }    
            }
            
                if(YearIsFound){
                   if(counter == 1)
                       numOfBooksLabel2.setText("You have read " + counter + " book in " + year + ".");
                   else
                       numOfBooksLabel2.setText("You have read " + counter + " books in " + year + ".");
                }else 
                   numOfBooksLabel2.setText("You have not read any books in " + year + ".");
                
            }else
                JOptionPane.showMessageDialog(null, "Please enter a valid year.", "INVALID YEAR", JOptionPane.WARNING_MESSAGE);
            
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Exception Thrown: " + ex , "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Exception Thrown: " + ex , "ERROR", JOptionPane.ERROR_MESSAGE);
        }catch (NumberFormatException ex){
            JOptionPane.showMessageDialog(null, "Please only enter numeric values.", "INVALID INPUT", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_displayNumOfBooksButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
                    
            // for the add book operation
            // clear all selections when this button is clicked
            titleTextField.setText(null);
            categoryTextField.setText(null);
            authorTextField.setText(null);
            awardTextField.setText(null);
            ratingComboBox.setSelectedIndex(0);
            yearTextField.setText(null);
            pagesTextField.setText(null);
            descriptionTextArea.setText(null);
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FunctionsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FunctionsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FunctionsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FunctionsJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FunctionsJFrame().setVisible(true);
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel SearchByAuthorLabel;
    private javax.swing.JLabel addBookLabel;
    private javax.swing.JPanel addBookPanel;
    private javax.swing.JButton addButton;
    private javax.swing.JPanel addTab;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JTextField authorNameTextField;
    private javax.swing.JTextField authorTextField;
    private javax.swing.JLabel awardLabel;
    private javax.swing.JTextField awardTextField;
    private javax.swing.JTextField bookIdTextField;
    private javax.swing.JTextArea booksTextArea;
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JTextField categorySearchTextField;
    private javax.swing.JTextField categoryTextField;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel deleteBookLabel;
    private javax.swing.JPanel deleteBookPanel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JPanel deleteTab;
    private javax.swing.JTextField deleteTextField;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel directiveLabel1;
    private javax.swing.JLabel directiveLabel2;
    private javax.swing.JLabel directiveLabel3;
    private javax.swing.JLabel directiveLabel4;
    private javax.swing.JLabel directiveLabel5;
    private javax.swing.JLabel directiveLabel6;
    private javax.swing.JLabel displayImageLabel;
    private javax.swing.JPanel displayImagePanel;
    private javax.swing.JPanel displayImageTab;
    private javax.swing.JButton displayImgButton;
    private javax.swing.JButton displayInfoButton;
    private javax.swing.JLabel displayInfoLabel;
    private javax.swing.JPanel displayInfoPanel;
    private javax.swing.JPanel displayInfoTab;
    private javax.swing.JButton displayNumOfBooksButton;
    private javax.swing.JLabel eLibraryLabel;
    private javax.swing.JPanel functionsPanel;
    private javax.swing.JLabel homeLabel;
    private javax.swing.JPanel homePanel;
    private javax.swing.JPanel homeTab;
    private javax.swing.JLabel iconLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JTextArea infoTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField keywordTextField;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel numOfBooksLabel;
    private javax.swing.JLabel numOfBooksLabel2;
    private javax.swing.JPanel numOfBooksPanel;
    private javax.swing.JPanel numOfBooksTab;
    private javax.swing.JLabel pagesLabel;
    private javax.swing.JTextField pagesTextField;
    private javax.swing.JComboBox<String> ratingComboBox;
    private javax.swing.JLabel ratingLabel;
    private javax.swing.JLabel resultLabel1;
    private javax.swing.JButton searchByAuthorButton;
    private javax.swing.JPanel searchByAuthorPanel;
    private javax.swing.JPanel searchByAuthorTab;
    private javax.swing.JButton searchByCategoryButton;
    private javax.swing.JLabel searchByCategoryLabel;
    private javax.swing.JPanel searchByCategoryPanel;
    private javax.swing.JPanel searchByCategoryTab;
    private javax.swing.JTextArea searchResultTextArea;
    private javax.swing.JCheckBox sortCheckBox;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField titleTextField;
    private javax.swing.JLabel warningLabel;
    private javax.swing.JLabel warningLabel2;
    private javax.swing.JLabel warningLabel3;
    private javax.swing.JLabel yearLabel;
    private javax.swing.JTextField yearTextField;
    private javax.swing.JTextField yearTextField2;
    // End of variables declaration//GEN-END:variables
}
